import std/[os, strutils]
import project, schemas, chronicles

const SUPPORTED_SHELLS* = [
  "zsh", "bash"
]

proc handleHome*(project: Project, home: HomeFileSchema) =
  let shell = home.home.shell
  
  info "Setting up shell."
  if shell notin SUPPORTED_SHELLS:
    warn "Shell is not supported. Environment variables will not be set. Sorry. :("
  else:
    var buffer = "# THIS SECTION WAS GENERATED BY DISTRICITY\n# IT IS NOT CONSTANT AND MAY MUTATE EVERY PROJECT APPLICATION!\n" & home.home.rc & "\n"
    for envVar in home.home.env:
      buffer &= "\nexport " & envVar
        
    case shell.toLowerAscii():
      of "bash":
        let file = open(getHomeDir() / ".bashrc", fmWrite)
        defer: file.close()

        file.write(buffer)
      of "zsh":
        let file = open(getHomeDir() / ".zshrc", fmWrite)
        defer: file.close()

        file.write(buffer)
      else: discard

  info "Set-up home and shell."


