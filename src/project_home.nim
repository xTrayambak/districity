import std/[os, strutils, logging]
import project, schemas, shell_omz

const SUPPORTED_SHELLS* = ["zsh", "bash", "fish"]

proc handleHome*(project: Project, home: HomeFileSchema, dontInstall: bool = false) =
  let shell = home.home.shell

  info "Setting up shell."

  if home.home.ohMyZsh and shell == "zsh":
    if not dontInstall:
      info "Setting up Oh My Zsh!"
      if not installOmz(shell):
        error "Oh My Zsh installation failed. You'll have to try it out manually. Sorry. :("
    else:
      info "Not setting up Oh My Zsh (--dont-install is enabled)"

  if shell notin SUPPORTED_SHELLS:
    warn "Shell is not supported. Environment variables will not be set. Sorry. :("
  else:
    var
      buffer =
        "# THIS SECTION WAS GENERATED BY DISTRICITY\n# IT IS NOT CONSTANT AND MAY MUTATE EVERY PROJECT APPLICATION!\n" &
        home.home.rc & "\n"
    for envVar in home.home.env:
      buffer &= "\nexport " & envVar

    if home.home.ohMyZsh and shell == "zsh":
      buffer &=
        '\n' &
        """
export ZSH="$HOME/.oh-my-zsh"
source $ZSH/oh-my-zsh.sh
"""

    case shell.toLowerAscii()
    of "bash":
      let file = open(getHomeDir() / ".bashrc", fmWrite)
      defer:
        file.close()

      file.write(buffer)
    of "zsh":
      let file = open(getHomeDir() / ".zshrc", fmWrite)
      defer:
        file.close()

      file.write(buffer)
    else:
      discard

  info "Set-up home and shell."
